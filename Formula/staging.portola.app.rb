# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class StagingPortolaApp < Formula
  desc ""
  homepage "https://github.com/portolanetwork/portola"
  version "0.7.289"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/portolanetwork/portola-staging-release/releases/download/v0.7.289/portola-staging_Darwin_x86_64.tar.gz"
      sha256 "4a572cb8857f292f8cf1997ac6931da3ca83ac7d6b9345a3bf7e41bd4e33ce74"

      def install
        bin.install "staged"
        bin.install "stagectl"
        prefix.install Dir["cmd/portd/deployment-assets/staging-usw1/resources"]
        prefix.install "cmd/portd/deployment-assets/staging-usw1/deployment.yaml"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/portolanetwork/portola-staging-release/releases/download/v0.7.289/portola-staging_Darwin_arm64.tar.gz"
      sha256 "c4d3869b265ec4e80da7a5972f41d852bacefbf26aa87643517096a259a4e815"

      def install
        bin.install "staged"
        bin.install "stagectl"
        prefix.install Dir["cmd/portd/deployment-assets/staging-usw1/resources"]
        prefix.install "cmd/portd/deployment-assets/staging-usw1/deployment.yaml"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/portolanetwork/portola-staging-release/releases/download/v0.7.289/portola-staging_Linux_x86_64.tar.gz"
      sha256 "f475815dae1ecfd449b41ad923d0cf497b3c356a9f2a2d8301140b6f7492b7da"
      def install
        bin.install "staged"
        bin.install "stagectl"
        prefix.install Dir["cmd/portd/deployment-assets/staging-usw1/resources"]
        prefix.install "cmd/portd/deployment-assets/staging-usw1/deployment.yaml"
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/portolanetwork/portola-staging-release/releases/download/v0.7.289/portola-staging_Linux_arm64.tar.gz"
      sha256 "c348c83dc4c94e9bde8264937a85f104eb67439bced3792676ba80d25b51a81c"
      def install
        bin.install "staged"
        bin.install "stagectl"
        prefix.install Dir["cmd/portd/deployment-assets/staging-usw1/resources"]
        prefix.install "cmd/portd/deployment-assets/staging-usw1/deployment.yaml"
      end
    end
  end

  def caveats
    <<~EOS
      ****************************************************************
      Installed Portola Staging Formula. To start the service run:
        brew services start staging.portola.app
      ****************************************************************
    EOS
  end

  service do
    run [opt_bin/"staged", "service", "start"]
    environment_variables(
      "BREW_APP_BIN_PATH" => "#{bin}",
      "BREW_APP_OPT_HOME" => "#{opt_prefix}",
      "BREW_PREFIX" => "#{HOMEBREW_PREFIX}"
    )
    keep_alive true
    error_log_path "#{var}/log/staging.portola.app/portd.err.log"
    process_type :interactive
    working_dir opt_prefix
  end
end
